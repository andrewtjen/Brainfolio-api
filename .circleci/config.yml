version: 2.1
orbs:
  heroku: circleci/heroku@1.2.2
jobs:
  build:
    docker:
      - image: circleci/node:12.18.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Fallback cache to be used 
            - v1-npm-deps-
      - run:
          name: Install Dependencies
          command: npm install

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - run: 
          name: Get Environment Variables from CircleCI
          command: |
            bash scripts/getEnv.sh
      

      - run: 
          name: Get Service Account Key from environment Variables
          command: |
            bash scripts/getServiceAccount.sh


      - run: 
          name: Run e2e test
          command: |
            npm run test:e2e

      - run:
          name: Push to master branch
          command: |
            git checkout testBranch
            git merge testBranch

        
     

 

      # - run:
      #     name: Build docker 
      #     command: |
      #       ls -a
      #       docker-compose up

  deploy:
    docker:
      - image: circleci/node:12.18.4
    environment:
      HEROKU_APP: "testdockerprod123"
    steps: 
      - checkout
      - heroku/install
      - install:
          description: |
              Download and install the Heroku CLI. Will be skipped if the CLI is already installed in the system.
          steps:
              - run:
                  command: |
                      if [[ $(command -v heroku) == "" ]]; then
                        curl https://cli-assets.heroku.com/install.sh | sh
                      else
                        echo "Heroku is already installed. No operation was performed."
                      fi
                  name: Install Heroku CLI (If not installed)
              - run:
                  name: Install Docker Compose
                  command: |
                    curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
                    chmod +x ~/docker-compose
                    sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run: 
          name: Verify if heroku key is set 
          command: |
            if [[ $HEROKU_API_KEY == "" ]]; then
            echo "No Heroku API key set, please set the HEROKU_API_KEY environment variable."
            echo "This can be found by running the `heroku auth:token` command locally."
              exit 1
            else
              echo "Heroku API key found."
            <<#parameters.print-whoami>>
              heroku auth:whoami
            <</parameters.print-whoami>>
            fi

      - run: 
          name: build docker images
          command: |
            docker-compose up

      - push-docker-image:
          description: |
            Deploy built docker image to heroku
          executor: default 
          parameters: 
            api-key:
              default: HEROKU_API_KEY
              description: The name of the environment variable containing your Heroku API Key.
              type: env_var_name
            app-name: 
              default: testdockerprod123
              type: string
          steps:
            - run: 
              command: heroku container:login
              name: Login to Heroku Docker image registry
            - run: 
              command: 
                docker tag brainfolio-api_web registry.heroku.com/testdockerprod123/web \
                docker push registry.heroku.com/testdockerprod123/web

      - release-docker-image:
          description: |
            Release a Docker image from the Heroku Docker registry.
          executor: default
          parameters: 
            api-key:
              default: HEROKU_API_KEY
              description: The name of the environment variable containing your Heroku API Key.
              type: env_var_name
            app-name: 
              default: testdockerprod123
              type: string
          steps:
            - run: 
              command: heroku container:login
              name: Login to Heroku Docker image registry
            - run: 
              command: |
                heroku container:release -a testdockerprod123 \ web
              name: Push Docker image to Heroku
        


      


### Only work in staging branch
workflows:
  build:
    jobs:
      - build:
          filters: 
            branches:
              only: staging
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: testBranch
 

          