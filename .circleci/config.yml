version: 2.1
orbs:
  heroku: circleci/heroku@1.2.2
  slack: circleci/slack@4.0.0

commands:
  install:
    description: |
        Download and install the Heroku CLI. Will be skipped if the CLI is already installed in the system.
    steps:
        - run:
            command: |
                if [[ $(command -v heroku) == "" ]]; then
                  curl https://cli-assets.heroku.com/install.sh | sh
                else
                  echo "Heroku is already installed. No operation was performed."
                fi
            name: Install Heroku CLI (If not installed)
  check-authentication:
    description: |
        Verifies the Heroku API key has been added so we can authenticate.
    parameters:
        print-whoami:
            default: false
            description: Print the result of heroku auth:whoami.
            type: boolean
    steps:
        - run:
            command: |
                if [[ $HEROKU_API_KEY == "" ]]; then
                  echo "No Heroku API key set, please set the HEROKU_API_KEY environment variable."
                  echo "This can be found by running the `heroku auth:token` command locally."
                  exit 1
                else
                  echo "Heroku API key found."
                  heroku auth:whoami
                fi
            name: Verify HEROKU_API_KEY is set

  push-docker-image:
    description: |
      Deploy built docker image to heroku
    parameters: 
      api-key:
        default: HEROKU_API_KEY
        description: The name of the environment variable containing your Heroku API Key.
        type: env_var_name
      app-name: 
        default: testdockerprod123
        type: string
    steps:
      - run: 
          command: heroku container:login
          name: Login to Heroku Docker image registry
      - run: 
          name: build docker images
          command: |
            docker-compose build
      - run: 
          name: tag docker images
          command: |
            docker tag brainfolio-api_web registry.heroku.com/testdockerprod123/web 
      - run: 
          name: push docker images
          command: |
            docker push registry.heroku.com/testdockerprod123/web
    

  release-docker-image:
    description: |
      Release a Docker image from the Heroku Docker registry.
    parameters: 
      api-key:
        default: HEROKU_API_KEY
        description: The name of the environment variable containing your Heroku API Key.
        type: env_var_name
      app-name: 
        default: testdockerprod123
        type: string
      process-types:
        default: web
        description: Process types.
        type: string
    steps:
      - run: 
          command: heroku container:login
          name: Login to Heroku Docker image registry
      - run: 
          command: |
            heroku container:release -a testdockerprod123  web
          name: Push Docker image to Heroku



executors:
  default:
    description: |
        A highly efficient and cached Ubuntu-based image. Consider using this executor or selecting an image for your language https://hub.docker.com/r/cimg/
    docker:
        - image: cimg/base:2020.01
    parameters:
        tag:
            default: stable
            description: |
                Pick a specific cimg/base tag: https://hub.docker.com/r/cimg/base/tags
            type: string

jobs:
  test:
    docker:
      - image: circleci/node:12.18.4
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Fallback cache to be used 
            - v1-npm-deps-
      - run:
          name: Install Dependencies
          command: npm install

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

      - run: 
          name: Get Environment Variables from CircleCI
          command: |
            bash scripts/getEnv.sh
      

      - run: 
          name: Get Service Account Key from environment Variables
          command: |
            bash scripts/getServiceAccount.sh


      - run: 
          name: Run e2e test
          command: |
            npm run test:e2e


      - slack/notify:
          color: "#9EFD38"
          message: Execute e2e Test

      - slack/notify:
          channel: github-build
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Successfully build and deployed application* ‚ùåüò¢üçÄüçÄüçÄ",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          

      - run: 
          name: Configure git and Set Commit message as Env variable
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "hlynn@student.unimelb.edu.au"
            git config user.name "hlynn"
            export GIT_COMMIT_DESC=$(git log --format=oneline -n 1 $CIRCLE_SHA1)
            echo $GIT_COMMIT_DESC

      - run:
          name: Push to master branch
          command: |
            git checkout testBranch
            git merge staging -m "Test Passed! $GIT_COMMIT_DESC"
            git push -q https://${GITHUB_PERSONAL_TOKEN}@github.com/warmnuances/Brainfolio-prod.git testBranch


        
     

 

      # - run:
      #     name: Build docker 
      #     command: |
      #       ls -a
      #       docker-compose up
  
  
  deploy:
    description: |
      Quickly and easily take the changes to this branch and deploy them to Heroku automatically with this job.
    executor: default
    parameters: 
      app-name:
        default: testdockerprod123
        description: The name of your Heroku App. For backwards compatibility the literal value `$HEROKU_APP_NAME` is the default, so you can easily use this command by setting an environment variable called HEROKU_APP_NAME
        type: string
    steps:
      - setup_remote_docker:
          version: 19.03.13
      - install
      - check-authentication
      - checkout

      - run: 
          name: Get Environment Variables from CircleCI
          command: |
            bash scripts/getEnv.sh
      
      - run: 
          name: Get Service Account Key from environment Variables
          command: |
            bash scripts/getServiceAccount.sh

      - push-docker-image:
          app-name: testdockerprod123

      - release-docker-image:
          app-name: testdockerprod123
          process-types: web

      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Successfully build and deployed application* ‚úÖü§óüî•üî•üî•",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: pass



        
   
     
      


### Only work in staging branch
workflows:
  build:
    jobs:
      - deploy:
          filters:
            branches:
              only: 
                - testBranch
      - test:
          filters: 
            branches:
              only: 
               - staging
 

          